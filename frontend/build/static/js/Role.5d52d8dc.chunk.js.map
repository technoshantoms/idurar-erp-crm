{"version":3,"sources":["forms/ÙŒRoleForm.jsx","pages/Role.jsx","context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/selectors.js","redux/crud/actions.js","context/erp/types.jsx","context/erp/reducer.jsx","context/erp/actions.jsx","context/erp/selectors.jsx","context/erp/index.jsx","utils/helpers.js","request/request.js","components/Loading/index.jsx","layout/DefaultLayout/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/ErpContextLayout/index.jsx","layout/ErpLayout/index.jsx","layout/DashboardLayout/index.jsx","layout/SettingsLayout/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/ReadItem/index.jsx","components/SearchItem/index.jsx","components/DataTable/index.jsx","modules/CrudModule/CrudDataTable.jsx","modules/CrudModule/index.jsx"],"names":["RoleForm","_ref","isUpdateForm","_jsxs","_Fragment","children","_jsx","Form","Item","name","label","rules","required","message","Input","Role","config","entity","PANEL_TITLE","dataTableTitle","ENTITY_NAME","CREATE_ENTITY","ADD_NEW_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE","readColumns","title","dataIndex","dataTableColumns","searchConfig","displayLabels","searchFields","outputValue","entityDisplayLabels","CrudModule","createForm","updateForm","OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelClose","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","_objectSpread","Error","concat","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","_useReducer","useReducer","_useReducer2","_slicedToArray","value","useMemo","Provider","useCrudContext","context","useContext","undefined","_context","crudContextAction","crudContextSelector","selectCrud","crud","selectCurrentItem","createSelector","current","selectListItems","list","selectItemById","itemId","result","items","find","item","_id","selectCreatedItem","create","selectUpdatedItem","update","selectDeletedItem","read","delete","selectSearchedItems","search","resetState","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","prev","next","stop","_x","apply","arguments","resetAction","_ref2","actionType","_ref3","_callee2","_context2","keyState","payload","_x2","currentItem","_ref4","data","_ref5","_callee3","_context3","_x3","currentAction","_ref6","_ref7","_callee4","_context4","_x4","_ref8","_ref8$options","options","page","_ref9","_callee5","_context5","request","sent","success","pagination","parseInt","pageSize","showSizeChanger","total","count","_x5","_ref10","jsonData","_ref11","_callee6","_context6","_x6","_ref12","id","_ref13","_callee7","_context7","_x7","_ref14","_ref15","_callee8","_context8","_x8","_ref16","_ref17","_callee9","_context9","_x9","_ref18","_ref18$options","_ref19","_callee10","_context10","_x10","isOpen","recordPayment","deleteModal","dataTableList","last","_action$keyState","_defineProperty","readPanel","updatePanel","createPanel","recordPanel","ErpContext","ErpContextProvider","useErpContext","erpContextAction","erpContextSelector","valueByString","obj","string","devider","split","map","key","reduce","o","x","get","join","Object","byString","s","a","replace","i","n","length","k","axios","defaults","baseURL","API_BASE_URL","withCredentials","_create","response","post","successHandler","notifyOnSuccess","notifyOnFailed","abrupt","t0","errorHandler","_read","_update","patch","_delete2","_ref4$options","filter","_filter","_ref5$options","_filter2","equal","query","_search","_ref6$options","slice","_list","_ref7$options","_post","_get","_patch","source","CancelToken","Loading","isLoading","antIcon","LoadingOutlined","style","fontSize","spin","Spin","indicator","spinning","DefaultLayout","CollapseBoxButton","onChange","className","onClick","TopCollapseBox","show","display","opacity","Row","Col","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","Sider","Layout","SidePanel","fixHeaderPanel","_useCrudContext","_useState","useState","_useState2","isSidePanelClose","setSidePanel","_useState3","_useState4","leftSider","setLeftSider","_useState5","_useState6","opacitySider","setOpacitySider","_useState7","_useState8","paddingTopSider","setPaddingTopSider","_useAppContext","useAppContext","stateApp","appContextAction","isNavMenuClose","navMenu","useEffect","timer","setTimeout","clearTimeout","trigger","MenuOutlined","width","collapsible","collapsedWidth","zeroWidthTriggerStyle","right","top","left","paddingTop","Content","ContentBox","stateCrud","padding","margin","maxWidth","flex","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","ErpContextLayout","ErpLayout","DashboardLayout","TopCard","cardContent","color","height","marginBottom","textAlign","justifyContent","Divider","SettingsLayout","topCardTitle","topCardContent","bottomCardContent","gutter","xs","sm","md","lg","CreateForm","formElements","useDispatch","_useSelector","useSelector","isSuccess","_Form$useForm","useForm","form","resetFields","layout","onFinish","fieldsValue","Button","htmlType","UpdateForm","newValues","birthday","dayjs","date","expiredDate","created","updated","setFieldsValue","paddingRight","paddingLeft","DeleteModal","_config$deleteMessage","deleteMessage","_config$modalTitle","modalTitle","displayItem","setDisplayItem","labels","Modal","visible","onOk","onCancel","confirmLoading","ReadItem","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","propsTitle","isDate","format","push","itemsList","SearchItemComponent","onRerender","_searchConfig$outputV","selectOptions","setOptions","currentValue","setCurrentValue","isSearching","searching","setSearching","valToSearch","setValToSearch","_useState9","_useState10","debouncedValue","setDebouncedValue","_useDebounce","useDebounce","cancel","optionField","q","fields","Select","loading","showSearch","allowClear","placeholder","SearchOutlined","float","defaultActiveFirstOption","showArrow","filterOption","notFoundContent","Empty","onSearch","searchText","onSelect","Option","SearchItem","_useState11","_useState12","setState","comp","DataTable","DropDownRowMenu","AddNewItem","_toConsumableArray","render","row","Dropdown","overlay","EllipsisOutlined","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","PageHeader","onBack","window","history","back","ghost","extra","uniqueId","Table","columns","rowKey","dataSource","Menu","icon","EyeOutlined","EditOutlined","DeleteOutlined","CrudDataTable","SidePanelTopContent","setLabels","currentlabels","size","marginLeft","FixHeaderPanel","block","PlusOutlined","useLayoutEffect"],"mappings":"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","file":"static/js/Role.5d52d8dc.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input, Select } from 'antd';\n\nexport default function RoleForm({ isUpdateForm = false }) {\n  return (\n    <>\n      <Form.Item\n        name=\"codeName\"\n        label=\"codeName\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your codeName!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"displayName\"\n        label=\"displayName\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your displayName!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"dashboardType\"\n        label=\"dashboardType\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your dashboardType!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\n\nimport CrudModule from '@/modules/CrudModule';\nimport RoleForm from '@/forms/ÙŒRoleForm';\n\nexport default function Role() {\n  const entity = 'role';\n  const searchConfig = {\n    displayLabels: ['displayName'],\n    searchFields: 'codeName,displayName',\n    outputValue: '_id',\n  };\n\n  const PANEL_TITLE = 'Role Panel';\n  const dataTableTitle = 'Role Lists';\n  const entityDisplayLabels = ['displayName'];\n\n  const readColumns = [\n    { title: 'codeName', dataIndex: 'codeName' },\n    { title: 'displayName', dataIndex: 'displayName' },\n    { title: 'dashboardType', dataIndex: 'dashboardType' },\n  ];\n\n  const dataTableColumns = [\n    { title: 'codeName', dataIndex: 'codeName' },\n    { title: 'displayName', dataIndex: 'displayName' },\n    { title: 'dashboardType', dataIndex: 'dashboardType' },\n  ];\n  const ADD_NEW_ENTITY = 'Add new Role';\n  const DATATABLE_TITLE = 'Roles List';\n  const ENTITY_NAME = 'Role';\n  const CREATE_ENTITY = 'Create Role';\n  const UPDATE_ENTITY = 'Update Role';\n\n  const config = {\n    entity,\n    PANEL_TITLE,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <CrudModule\n      createForm={<RoleForm />}\n      updateForm={<RoleForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_ADVANCED_BOX = 'OPEN_ADVANCED_BOX';\nexport const CLOSE_ADVANCED_BOX = 'CLOSE_ADVANCED_BOX';\n\nexport const OPEN_EDIT_BOX = 'OPEN_EDIT_BOX';\nexport const CLOSE_EDIT_BOX = 'CLOSE_EDIT_BOX';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n\nexport const OPEN_BOX = 'OPEN_BOX';\nexport const CLOSE_BOX = 'CLOSE_BOX';\nexport const COLLAPSE_BOX = 'COLLAPSE_BOX';\n\nexport const OPEN_READ_BOX = 'OPEN_READ_BOX';\nexport const CLOSE_READ_BOX = 'CLOSE_READ_BOX';\nexport const COLLAPSE_READ_BOX = 'COLLAPSE_READ_BOX';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelClose: true,\n  isBoxCollapsed: false,\n  isReadBoxOpen: false,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelClose: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelClose: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelClose: !state.isPanelClose,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log('readBox open');\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log('readBox close');\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error('useCrudContext must be used within a CrudContextProvider');\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import { createSelector } from 'reselect';\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector([selectCrud], (crud) => crud.current);\n\nexport const selectListItems = createSelector([selectCrud], (crud) => crud.list);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) => list.result.items.find((item) => item._id === itemId));\n\nexport const selectCreatedItem = createSelector([selectCrud], (crud) => crud.create);\n\nexport const selectUpdatedItem = createSelector([selectCrud], (crud) => crud.update);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector([selectCrud], (crud) => crud.delete);\n\nexport const selectSearchedItems = createSelector([selectCrud], (crud) => crud.search);\n","import * as actionTypes from './types';\nimport { request } from '@/request';\n\nexport const crud = {\n  resetState:\n    (props = {}) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.RESET_STATE,\n      });\n    },\n  resetAction:\n    ({ actionType }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.RESET_ACTION,\n        keyState: actionType,\n        payload: null,\n      });\n    },\n  currentItem:\n    ({ data }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: { ...data },\n      });\n    },\n  currentAction:\n    ({ actionType, data }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.CURRENT_ACTION,\n        keyState: actionType,\n        payload: { ...data },\n      });\n    },\n  list:\n    ({ entity, options = { page: 1 } }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'list',\n        payload: null,\n      });\n\n      let data = await request.list({ entity, options });\n\n      if (data.success === true) {\n        const result = {\n          items: data.result,\n          pagination: {\n            current: parseInt(data.pagination.page, 10),\n            pageSize: 10,\n            showSizeChanger: false,\n            total: parseInt(data.pagination.count, 10),\n          },\n        };\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'list',\n          payload: result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'list',\n          payload: null,\n        });\n      }\n    },\n  create:\n    ({ entity, jsonData }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'create',\n        payload: null,\n      });\n\n      let data = await request.create({ entity, jsonData });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'create',\n          payload: data.result,\n        });\n\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'create',\n          payload: null,\n        });\n      }\n    },\n  read:\n    ({ entity, id }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'read',\n        payload: null,\n      });\n\n      let data = await request.read({ entity, id });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: data.result,\n        });\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'read',\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'read',\n          payload: null,\n        });\n      }\n    },\n  update:\n    ({ entity, id, jsonData }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'update',\n        payload: null,\n      });\n\n      let data = await request.update({ entity, id, jsonData });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'update',\n          payload: data.result,\n        });\n        dispatch({\n          type: actionTypes.CURRENT_ITEM,\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'update',\n          payload: null,\n        });\n      }\n    },\n\n  delete:\n    ({ entity, id }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'delete',\n        payload: null,\n      });\n\n      let data = await request.delete({ entity, id });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'delete',\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'delete',\n          payload: null,\n        });\n      }\n    },\n\n  search:\n    ({ entity, options = {} }) =>\n    async (dispatch) => {\n      dispatch({\n        type: actionTypes.REQUEST_LOADING,\n        keyState: 'search',\n        payload: null,\n      });\n\n      let data = await request.search({ entity, options });\n\n      if (data.success === true) {\n        dispatch({\n          type: actionTypes.REQUEST_SUCCESS,\n          keyState: 'search',\n          payload: data.result,\n        });\n      } else {\n        dispatch({\n          type: actionTypes.REQUEST_FAILED,\n          keyState: 'search',\n          payload: null,\n        });\n      }\n    },\n};\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const OPEN_PANEL = 'OPEN_PANEL';\nexport const CLOSE_PANEL = 'CLOSE_PANEL';\nexport const COLLAPSE_PANEL = 'COLLAPSE_PANEL';\n","import * as actionTypes from './types';\n\nexport const initialState = {\n  create: {\n    isOpen: false,\n  },\n  update: {\n    isOpen: false,\n  },\n  read: {\n    isOpen: false,\n  },\n  recordPayment: {\n    isOpen: false,\n  },\n  deleteModal: {\n    isOpen: false,\n  },\n  dataTableList: {\n    isOpen: true,\n  },\n  last: null,\n};\n\nexport function contextReducer(state, action) {\n  const { keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: true },\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        deleteModal: { isOpen: false },\n      };\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...initialState,\n        dataTableList: {\n          isOpen: false,\n        },\n        [keyState]: { isOpen: true },\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...initialState,\n      };\n\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from './types';\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    readPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'read' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    updatePanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'update' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    createPanel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL, keyState: 'create' });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n    recordPanel: {\n      open: () => {\n        dispatch({\n          type: actionTypes.OPEN_PANEL,\n          keyState: 'recordPayment',\n        });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from 'react';\nimport { initialState, contextReducer } from './reducer';\nimport contextActions from './actions';\nimport contextSelectors from './selectors';\n\nconst ErpContext = createContext();\n\nfunction ErpContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <ErpContext.Provider value={value}>{children}</ErpContext.Provider>;\n}\n\nfunction useErpContext() {\n  const context = useContext(ErpContext);\n  if (context === undefined) {\n    throw new Error('useErpContext must be used within a ErpContextProvider');\n  }\n  const [state, dispatch] = context;\n  const erpContextAction = contextActions(dispatch);\n  const erpContextSelector = contextSelectors(state);\n  return { state, erpContextAction, erpContextSelector };\n}\n\nexport { ErpContextProvider, useErpContext };\n","import { parse } from 'querystring';\nimport dayjs from 'dayjs';\nfunction getPageQuery() {\n  parse(window.location.href.split('?')[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split('.').reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  s = s.replace(/^\\./, ''); // strip a leading dot\n  let a = s.split('.');\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split('.').every(function (x) {\n    if (typeof obj !== 'object' || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = '|';\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(' ');\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll('input, select, textarea');\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== 'true') {\n      if (element.type === 'file') {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\nexport const isDate = function ({ date, format = 'YYYY-MM-DD' }) {\n  if (typeof date == 'boolean') return false;\n  if (typeof date == 'number') return false;\n  if (dayjs(date, format).isValid()) return true;\n  return false;\n};\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + ' ' + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll('[data-property]').forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case 'date':\n        value = formatDate(value);\n        break;\n\n      case 'datetime':\n        value = formatDatetime(value);\n        break;\n\n      case 'currency':\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import axios from 'axios';\nimport { API_BASE_URL } from '@/config/serverApiConfig';\n\nimport errorHandler from './errorHandler';\nimport successHandler from './successHandler';\n\naxios.defaults.baseURL = API_BASE_URL;\naxios.defaults.withCredentials = true;\n\nconst request = {\n  create: async ({ entity, jsonData }) => {\n    console.log('ðŸš€ Create Request ðŸš€ ~ file: request.js ~ line 19 ~ create: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.post(entity + '/create', jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async ({ entity, id }) => {\n    try {\n      const response = await axios.get(entity + '/read/' + id);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async ({ entity, id, jsonData }) => {\n    console.log('ðŸš€ ~ file: request.js ~ line 34 ~ update: ~ id', id);\n    console.log('ðŸš€ Update Request ðŸš€ ~ file: request.js ~ line 42 ~ update: ~ jsonData', jsonData);\n\n    try {\n      const response = await axios.patch(entity + '/update/' + id, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async ({ entity, id, options = {} }) => {\n    try {\n      const response = await axios.delete(entity + '/delete/' + id);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async ({ entity, options = {} }) => {\n    try {\n      let filter = options.filter ? 'filter=' + options.filter : '';\n      let equal = options.equal ? '&equal=' + options.equal : '';\n      let query = `?${filter}${equal}`;\n\n      const response = await axios.get(entity + '/filter' + query);\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n      // headersInstance.cancelToken = source.token;\n      const response = await axios.get(entity + '/search' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async ({ entity, options = {} }) => {\n    try {\n      let query = '?';\n      for (var key in options) {\n        query += key + '=' + options[key] + '&';\n      }\n      query = query.slice(0, -1);\n\n      const response = await axios.get(entity + '/list' + query);\n\n      successHandler(response, {\n        notifyOnSuccess: false,\n        notifyOnFailed: false,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async ({ entity, jsonData, options = {} }) => {\n    try {\n      const response = await axios.post(entity, jsonData);\n\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async ({ entity }) => {\n    try {\n      const response = await axios.get(entity);\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async ({ entity, jsonData }) => {\n    try {\n      const response = await axios.patch(entity, jsonData);\n      successHandler(response, {\n        notifyOnSuccess: true,\n        notifyOnFailed: true,\n      });\n      return response.data;\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  source: () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import React from 'react';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import React from 'react';\n\nimport { CrudContextProvider } from '@/context/crud';\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from 'react';\nimport { Row, Col } from 'antd';\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen ? { display: 'none', opacity: 0 } : { display: 'block', opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n}) {\n  const collapsed = isCollapsed ? 'collapsed' : '';\n  return (\n    <div className=\"panelBox\">\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={'collapseBox ' + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>{bottomContent}</BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useCrudContext } from '@/context/crud';\nimport { useAppContext } from '@/context/appContext';\nimport { Layout } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\nimport CollapseBox from '../CollapseBox';\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({ config, topContent, bottomContent, fixHeaderPanel }) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelClose, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [isSidePanelClose, setSidePanel] = useState(isPanelClose);\n  const [leftSider, setLeftSider] = useState('-1px');\n  const [opacitySider, setOpacitySider] = useState(0);\n  const [paddingTopSider, setPaddingTopSider] = useState('20px');\n\n  const { state: stateApp, appContextAction } = useAppContext();\n  const { isNavMenuClose } = stateApp;\n  const { navMenu } = appContextAction;\n\n  useEffect(() => {\n    let timer = [];\n    if (isPanelClose) {\n      setOpacitySider(0);\n      setPaddingTopSider('20px');\n\n      timer = setTimeout(() => {\n        setLeftSider('-1px');\n        setSidePanel(isPanelClose);\n      }, 200);\n    } else {\n      setSidePanel(isPanelClose);\n      setLeftSider(0);\n      timer = setTimeout(() => {\n        setOpacitySider(1);\n        setPaddingTopSider(0);\n      }, 200);\n      if (!isNavMenuClose) {\n        navMenu.close();\n      }\n    }\n\n    return () => clearTimeout(timer);\n  }, [isPanelClose]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isSidePanelClose}\n      collapsedWidth={'0px'}\n      onCollapse={collapsePanel}\n      className=\"sidePanel\"\n      zeroWidthTriggerStyle={{\n        right: '-50px',\n        top: '15px',\n      }}\n      style={{\n        left: leftSider,\n      }}\n    >\n      <div\n        className=\"sidePanelContent\"\n        style={{\n          opacity: opacitySider,\n          paddingTop: paddingTopSider,\n        }}\n      >\n        {fixHeaderPanel}\n        <CollapseBox\n          buttonTitle={ADD_NEW_ENTITY}\n          isCollapsed={isBoxCollapsed}\n          onCollapse={collapsePanelBox}\n          topContent={topContent}\n          bottomContent={bottomContent}\n        ></CollapseBox>\n      </div>\n    </Sider>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport DefaultLayout from '../DefaultLayout';\n\nimport SidePanel from '@/components/SidePanel';\nimport { Layout } from 'antd';\nimport { useCrudContext } from '@/context/crud';\nimport { useAppContext } from '@/context/appContext';\n\nconst { Content } = Layout;\n\nconst ContentBox = ({ children }) => {\n  const { state: stateCrud, crudContextAction } = useCrudContext();\n  const { state: stateApp } = useAppContext();\n  const { isPanelClose } = stateCrud;\n  const { isNavMenuClose } = stateApp;\n  const { panel } = crudContextAction;\n\n  const [isSidePanelClose, setSidePanel] = useState(isPanelClose);\n\n  useEffect(() => {\n    let timer = [];\n    if (isPanelClose) {\n      timer = setTimeout(() => {\n        setSidePanel(isPanelClose);\n      }, 200);\n    } else {\n      setSidePanel(isPanelClose);\n    }\n\n    return () => clearTimeout(timer);\n  }, [isPanelClose]);\n\n  useEffect(() => {\n    if (!isNavMenuClose) {\n      panel.close();\n    }\n  }, [isNavMenuClose]);\n  return (\n    <Content\n      className=\"whiteBox shadow\"\n      style={{\n        padding: '50px 40px',\n        margin: '100px auto',\n        width: isSidePanelClose ? '100%' : '830px',\n        maxWidth: '1000px',\n        flex: 'none',\n      }}\n    >\n      {children}\n    </Content>\n  );\n};\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <>\n      <DefaultLayout>\n        <Layout style={{ minHeight: '100vh' }}>\n          <SidePanel\n            config={config}\n            topContent={sidePanelTopContent}\n            bottomContent={sidePanelBottomContent}\n            fixHeaderPanel={fixHeaderPanel}\n          ></SidePanel>\n          <Layout>\n            <ContentBox> {children}</ContentBox>\n          </Layout>\n        </Layout>\n      </DefaultLayout>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { ErpContextProvider } from '@/context/erp';\n\nfunction ErpContextLayout({ children }) {\n  return <ErpContextProvider>{children}</ErpContextProvider>;\n}\n\nexport default ErpContextLayout;\n","import React from 'react';\n\nimport ErpContextLayout from '../ErpContextLayout';\n\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport default function ErpLayout({ children, config }) {\n  return (\n    <ErpContextLayout>\n      <Layout className=\"site-layout\">\n        <Content\n          className=\"whiteBox shadow\"\n          style={{\n            padding: '50px 40px',\n            margin: '100px auto',\n            width: '100%',\n            maxWidth: '1100px',\n          }}\n        >\n          {children}\n        </Content>\n      </Layout>\n    </ErpContextLayout>\n  );\n}\n","import React from 'react';\n\nimport { Layout } from 'antd';\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <Content\n        style={{\n          padding: '30px 40px',\n          margin: '70px auto',\n          width: '100%',\n          maxWidth: '1100px',\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React from 'react';\n\nimport { Layout } from 'antd';\nimport { Divider, Row, Col } from 'antd';\n\nconst { Content } = Layout;\n\nconst TopCard = ({ title, cardContent }) => {\n  return (\n    <div\n      className=\"whiteBox shadow\"\n      style={{ color: '#595959', fontSize: 13, height: '106px', marginBottom: '24px' }}\n    >\n      <div className=\"pad15 strong\" style={{ textAlign: 'center', justifyContent: 'center' }}>\n        <h3 style={{ color: '#22075e', marginBottom: 0 }}>{title}</h3>\n      </div>\n      <Divider style={{ padding: 0, margin: 0 }}></Divider>\n      <div className=\"pad15\" style={{ textAlign: 'center', justifyContent: 'center' }}>\n        {cardContent}\n      </div>\n    </div>\n  );\n};\n\nexport default function SettingsLayout({\n  children,\n  topCardTitle,\n  topCardContent,\n  bottomCardContent,\n}) {\n  return (\n    <Layout className=\"site-layout\">\n      <Content\n        style={{\n          padding: '30px 40px',\n          margin: '70px auto',\n          width: '100%',\n          maxWidth: '1100px',\n        }}\n      >\n        <Row gutter={[24, 24]}>\n          <Col\n            className=\"gutter-row\"\n            xs={{ span: 24 }}\n            sm={{ span: 24 }}\n            md={{ span: 17 }}\n            lg={{ span: 18 }}\n          >\n            <div className=\"whiteBox shadow\" style={{ minHeight: '480px' }}>\n              <Row className=\"pad10\" gutter={[0, 0]}>\n                {children}\n              </Row>\n            </div>\n          </Col>\n          <Col\n            className=\"gutter-row\"\n            xs={{ span: 24 }}\n            sm={{ span: 24 }}\n            md={{ span: 7 }}\n            lg={{ span: 6 }}\n          >\n            <TopCard title={topCardTitle} cardContent={topCardContent} />\n            <div className=\"whiteBox shadow\" style={{ minHeight: '280px' }}>\n              <Row gutter={[0, 0]}>{bottomCardContent}</Row>\n            </div>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectCreatedItem } from '@/redux/crud/selectors';\n\nimport { Button, Form } from 'antd';\nimport Loading from '@/components/Loading';\n\nexport default function CreateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    console.log('ðŸš€ ~ file: index.jsx ~ line 19 ~ onSubmit ~ fieldsValue', fieldsValue);\n\n    dispatch(crud.create({ entity, jsonData: fieldsValue }));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'create' }));\n      dispatch(crud.list({ entity }));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from 'react';\nimport dayjs from 'dayjs';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectUpdatedItem } from '@/redux/crud/selectors';\n\nimport { isDate } from '@/utils/helpers';\nimport { selectCurrentItem } from '@/redux/crud/selectors';\n\nimport { Button, Form } from 'antd';\nimport Loading from '@/components/Loading';\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n\n  /////\n\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const showCurrentRecord = () => {\n    readBox.open();\n  };\n\n  /////\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    console.log('ðŸš€ ~ file: index.jsx ~ line 34 ~ onSubmit ~  current._id', current._id);\n    const id = current._id;\n    dispatch(crud.update({ entity, id, jsonData: fieldsValue }));\n  };\n  useEffect(() => {\n    if (current) {\n      let newValues = { ...current };\n      if (newValues.birthday) {\n        newValues = {\n          ...newValues,\n          birthday: dayjs(newValues['birthday']),\n        };\n      }\n      if (newValues.date) {\n        newValues = {\n          ...newValues,\n          date: dayjs(newValues['date']),\n        };\n      }\n      if (newValues.expiredDate) {\n        newValues = {\n          ...newValues,\n          expiredDate: dayjs(newValues['expiredDate']),\n        };\n      }\n      if (newValues.created) {\n        newValues = {\n          ...newValues,\n          created: dayjs(newValues['created']),\n        };\n      }\n      if (newValues.updated) {\n        newValues = {\n          ...newValues,\n          updated: dayjs(newValues['updated']),\n        };\n      }\n\n      console.log('ðŸš€ ~ file: index.jsx ~ line 40 ~ useEffect ~ obj', newValues);\n      form.setFieldsValue(newValues);\n    }\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction({ actionType: 'update' }));\n      dispatch(crud.list({ entity }));\n    }\n  }, [isSuccess]);\n\n  const { isEditBoxOpen } = state;\n\n  const show = isEditBoxOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingRight: '5px',\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n          </Form.Item>\n          <Form.Item\n            style={{\n              display: 'inline-block',\n              paddingLeft: '5px',\n            }}\n          >\n            <Button onClick={showCurrentRecord}>Cancel</Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'antd';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\nimport { selectDeletedItem } from '@/redux/crud/selectors';\nimport { valueByString } from '@/utils/helpers';\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = 'Do you want delete : ',\n    modalTitle = 'Remove Item',\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState('');\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list({ entity }));\n      // dispatch(crud.resetAction({actionType:\"delete\"})); // check here maybe it wrong\n    }\n    if (current) {\n      let labels = entityDisplayLabels.map((x) => valueByString(current, x)).join(' ');\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete({ entity, id }));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Row, Col, Button } from 'antd';\nimport { useSelector } from 'react-redux';\n\nimport dayjs from 'dayjs';\n\nimport { useCrudContext } from '@/context/crud';\nimport { selectCurrentItem } from '@/redux/crud/selectors';\nimport { valueByString } from '@/utils/helpers';\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const isDate = props.isDate || false;\n      let value = valueByString(currentResult, propsKey);\n      value = isDate ? dayjs(value).format('DD/MM/YYYY') : value;\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen ? { display: 'block', opacity: 1 } : { display: 'none', opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { useDebounce } from 'react-use';\nimport { Select, Empty } from 'antd';\n\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\n\nimport { useCrudContext } from '@/context/crud';\nimport { selectSearchedItems } from '@/redux/crud/selectors';\n\nfunction SearchItemComponent({ config, onRerender }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = '_id' } = searchConfig;\n\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const [selectOptions, setOptions] = useState([]);\n  const [currentValue, setCurrentValue] = useState(undefined);\n\n  const isSearching = useRef(false);\n\n  const [searching, setSearching] = useState(false);\n\n  const [valToSearch, setValToSearch] = useState('');\n  const [debouncedValue, setDebouncedValue] = useState('');\n\n  const [, cancel] = useDebounce(\n    () => {\n      setDebouncedValue(valToSearch);\n    },\n    500,\n    [valToSearch]\n  );\n\n  const labels = (optionField) => {\n    return displayLabels.map((x) => optionField[x]).join(' ');\n  };\n\n  useEffect(() => {\n    if (debouncedValue != '') {\n      const options = {\n        q: debouncedValue,\n        fields: searchFields,\n      };\n      dispatch(crud.search({ entity, options }));\n    }\n    return () => {\n      cancel();\n    };\n  }, [debouncedValue]);\n\n  const onSearch = (searchText) => {\n    if (searchText && searchText != '') {\n      isSearching.current = true;\n      setSearching(true);\n      setOptions([]);\n      setCurrentValue(undefined);\n      setValToSearch(searchText);\n    }\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem({ data: currentItem }));\n\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n    onRerender();\n  };\n  useEffect(() => {\n    if (isSearching.current) {\n      if (isSuccess) {\n        setOptions(result);\n      } else {\n        setSearching(false);\n        setCurrentValue(undefined);\n        setOptions([]);\n      }\n    }\n  }, [isSuccess, result]);\n\n  return (\n    <Select\n      loading={isLoading}\n      showSearch\n      allowClear\n      placeholder={<SearchOutlined style={{ float: 'right', padding: '8px 0' }} />}\n      defaultActiveFirstOption={false}\n      showArrow={false}\n      filterOption={false}\n      notFoundContent={searching ? '... Searching' : <Empty />}\n      value={currentValue}\n      onSearch={onSearch}\n      style={{ width: '100%' }}\n      onSelect={onSelect}\n    >\n      {selectOptions.map((optionField) => (\n        <Select.Option key={optionField[outputValue]} value={optionField[outputValue]}>\n          {labels(optionField)}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nexport default function SearchItem({ config }) {\n  const [state, setState] = useState([0]);\n\n  const onRerender = () => {\n    setState([state + 1]);\n  };\n\n  return state.map((comp) => (\n    <SearchItemComponent key={comp} config={config} onRerender={onRerender} />\n  ));\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { Dropdown, Button, PageHeader, Table, Col } from 'antd';\n\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { selectListItems } from '@/redux/crud/selectors';\n\nimport uniqueId from '@/utils/uinqueId';\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, dataTableColumns, dataTableTitle } = config;\n\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: '',\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={['click']}>\n          <EllipsisOutlined style={{ cursor: 'pointer', fontSize: '24px' }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(selectListItems);\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    const options = { page: pagination.current || 1 };\n    dispatch(crud.list({ entity, options }));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list({ entity }));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: '20px 0px',\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Button, Menu } from 'antd';\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { crud } from '@/redux/crud/actions';\nimport { selectItemById } from '@/redux/crud/selectors';\nimport { useCrudContext } from '@/context/crud';\nimport uniqueId from '@/utils/uinqueId';\nimport DataTable from '@/components/DataTable';\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem({ data: item }));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentItem({ data: item }));\n    dispatch(crud.currentAction({ actionType: 'update', data: item }));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction({ actionType: 'delete', data: item }));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<DeleteOutlined />} onClick={Delete}>\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function CrudDataTable({ config }) {\n  return <DataTable config={config} DropDownRowMenu={DropDownRowMenu} AddNewItem={AddNewItem} />;\n}\n","import React, { useLayoutEffect, useEffect, useState } from 'react';\nimport { Row, Col, Button, Divider } from 'antd';\nimport { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nimport CreateForm from '@/components/CreateForm';\nimport UpdateForm from '@/components/UpdateForm';\nimport DeleteModal from '@/components/DeleteModal';\nimport ReadItem from '@/components/ReadItem';\nimport SearchItem from '@/components/SearchItem';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectCurrentItem } from '@/redux/crud/selectors';\nimport { crud } from '@/redux/crud/actions';\nimport { useCrudContext } from '@/context/crud';\n\nimport { CrudLayout } from '@/layout';\n\nimport CrudDataTable from './CrudDataTable';\n\nfunction SidePanelTopContent({ config, formElements }) {\n  const { crudContextAction, state } = useCrudContext();\n  const { entityDisplayLabels } = config;\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n\n  const { isReadBoxOpen, isEditBoxOpen } = state;\n  const { result: currentItem } = useSelector(selectCurrentItem);\n  const dispatch = useDispatch();\n\n  const [labels, setLabels] = useState('');\n  useEffect(() => {\n    if (currentItem) {\n      const currentlabels = entityDisplayLabels.map((x) => currentItem[x]).join(' ');\n\n      setLabels(currentlabels);\n    }\n  }, [currentItem]);\n\n  const removeItem = () => {\n    dispatch(crud.currentAction({ actionType: 'delete', data: currentItem }));\n    modal.open();\n  };\n  const editItem = () => {\n    dispatch(crud.currentAction({ actionType: 'update', data: currentItem }));\n    editBox.open();\n  };\n\n  const show = isReadBoxOpen || isEditBoxOpen ? { opacity: 1 } : { opacity: 0 };\n  return (\n    <>\n      <Row style={show}>\n        <Col span={13}>\n          <p style={{ marginBottom: '10px' }}>{labels}</p>\n        </Col>\n        <Col span={11}>\n          <Button\n            onClick={removeItem}\n            type=\"text\"\n            icon={<DeleteOutlined />}\n            size=\"small\"\n            style={{ float: 'right', marginLeft: '5px' }}\n          >\n            remove\n          </Button>\n          <Button\n            onClick={editItem}\n            type=\"text\"\n            icon={<EditOutlined />}\n            size=\"small\"\n            style={{ float: 'right', marginLeft: '0px' }}\n          >\n            edit\n          </Button>\n        </Col>\n\n        <Col span={24}>\n          <div className=\"line\"></div>\n        </Col>\n        <div className=\"space10\"></div>\n      </Row>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>{config.PANEL_TITLE}</h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button onClick={addNewItem} block={true} icon={<PlusOutlined />}></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction CrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={<CreateForm config={config} formElements={createForm} />}\n      sidePanelTopContent={<SidePanelTopContent config={config} formElements={updateForm} />}\n    >\n      <CrudDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n\nexport default CrudModule;\n"],"sourceRoot":""}